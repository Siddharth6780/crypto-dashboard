{"version":3,"sources":["cryptoData.js","App.js","index.js"],"names":["CryptoData","name","price","symbol","marketcap","volume","image","priceChange","className","src","alt","toUpperCase","toLocaleString","toFixed","App","useState","DataAPI","setDataAPI","search","setSearch","getCryptoData","a","fetch","res","json","Crypto_data","console","log","useEffect","type","placeholder","onChange","e","target","value","filter","val","toLowerCase","includes","map","currEle","current_price","market_cap","total_volume","price_change_percentage_24h","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAiCeA,EA/BI,SAAC,GAQb,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,OACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,MACAC,EACI,EADJA,YAEA,OACE,mCACE,qBAAKC,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAKH,EAAOI,IAAI,SAASF,UAAU,iBACxC,qBAAKA,UAAU,YAAf,SAA4BP,OAE9B,qBAAKO,UAAU,aAAf,SAA6BL,EAAOQ,gBACpC,sBAAKH,UAAU,gBAAf,cAAiCN,KACjC,sBAAKM,UAAU,SAAf,sBAAkCH,EAAOO,oBACxCL,EAAc,EACb,sBAAKC,UAAU,wBAAf,UAAwCD,EAAYM,QAAQ,GAA5D,OAEA,sBAAKL,UAAU,0BAAf,UAA0CD,EAAYM,QAAQ,GAA9D,OAEF,sBAAKL,UAAU,aAAf,uBAAuCJ,EAAUQ,4B,MCvB5C,SAASE,IAAO,IAAD,EACEC,mBAAS,IADX,mBACrBC,EADqB,KACZC,EADY,OAEAF,mBAAS,IAFT,mBAErBG,EAFqB,KAEbC,EAFa,KAItBC,EAAa,uCAAG,8BAAAC,EAAA,sEAGhB,0HAHgB,SAIAC,MADhB,2HAHgB,cAIZC,EAJY,gBAKQA,EAAIC,OALZ,OAKZC,EALY,OAMlBR,EAAWQ,GANO,kDAQlBC,QAAQC,IAAR,MARkB,0DAAH,qDAiBnB,OALAC,qBAAU,WACRR,MACC,IAID,qCACE,oBAAIZ,UAAU,UAAd,+BACA,qBAAKA,UAAU,oBAAf,SACE,+BACE,uBACEA,UAAU,aACVqB,KAAK,OACLC,YAAY,SACZC,SAAU,SAACC,GAAD,OAAOb,EAAUa,EAAEC,OAAOC,cAM1C,qBAAK1B,UAAU,WAAf,SAECQ,EAAQmB,QAAO,SAACC,GACf,MAAc,IAAVlB,GACKkB,EAAInC,KAAKoC,cAAcC,SAASpB,EAAOmB,eADvBD,OACpB,KAGJG,KAAI,SAACC,GACN,OACE,cAAC,EAAD,CAEEvC,KAAMuC,EAAQvC,KACdC,MAAOsC,EAAQC,cACftC,OAAQqC,EAAQrC,OAChBC,UAAWoC,EAAQE,WACnBrC,OAAQmC,EAAQG,aAChBrC,MAAOkC,EAAQlC,MACfC,YAAaiC,EAAQI,6BAPhBJ,EAAQK,YC9CzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,MAEFmC,SAASC,eAAe,W","file":"static/js/main.f61fa797.chunk.js","sourcesContent":["import React from \"react\";\n\nconst CryptoData = ({\n  name,\n  price,\n  symbol,\n  marketcap,\n  volume,\n  image,\n  priceChange,\n}) => {\n  return (\n    <>\n      <div className=\"crypto-data\">\n        <div className=\"main-cointainer\">\n          <div className=\"name\">\n            <img src={image} alt=\"images\" className=\"image_crypto\" />\n            <div className=\"curr_name\">{name}</div>\n          </div>\n          <div className=\"short-form\">{symbol.toUpperCase()}</div>\n          <div className=\"current-price\">${price}</div>\n          <div className=\"volume\">Volume: ${volume.toLocaleString()}</div>\n          {priceChange < 0 ? (\n            <div className=\"percentage-change red\">{priceChange.toFixed(2)}%</div>\n          ) : (\n            <div className=\"percentage-change green\">{priceChange.toFixed(2)}%</div>\n          )}\n          <div className=\"market-cap\">Mkt Cap: ${marketcap.toLocaleString()}</div>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default CryptoData;\n","import React, { useEffect, useState } from \"react\";\nimport CryptoData from \"./cryptoData\";\nimport \"./style.css\";\n\nexport default function App() {\n  const [DataAPI, setDataAPI] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const getCryptoData = async () => {\n    try {\n      let url =\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=USD&order=market_cap_desc&per_page=30&page=1&sparkline=false\";\n      const res = await fetch(url);\n      const Crypto_data = await res.json();\n      setDataAPI(Crypto_data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getCryptoData();\n  }, []);\n\n\n  return (\n    <>\n      <h1 className=\"heading\">Search a Currnecy</h1>\n      <div className=\"search-cointainer\">\n        <form>\n          <input\n            className=\"coin-input\"\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </form>\n      </div>\n\n  \n      <div className=\"main-div\">\n\n      {DataAPI.filter((val) => {\n        if (search == \"\") return val;\n        else if (val.name.toLowerCase().includes(search.toLowerCase())) {\n          return val;\n        }\n      }).map((currEle) => {\n        return (\n          <CryptoData\n            key={currEle.id}\n            name={currEle.name}\n            price={currEle.current_price}\n            symbol={currEle.symbol}\n            marketcap={currEle.market_cap}\n            volume={currEle.total_volume}\n            image={currEle.image}\n            priceChange={currEle.price_change_percentage_24h}\n          />\n        );\n      })}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}